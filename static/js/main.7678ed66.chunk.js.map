{"version":3,"sources":["Components/Aside.js","Components/Header.js","Components/Container.js","Components/Footer.js","api.js","Components/SliderListItem.js","Components/MovieView.js","Components/SliderList.js","Components/Slider.js","Components/RankListItem.js","Components/RankList.js","Components/LiveRank.js","Components/Main.js","Components/SearchInput.js","Components/SearchResultItem.js","Components/SearchResult.js","Components/Search.js","App.js","serviceWorker.js","index.js"],"names":["Aside","open","closeMenu","className","type","onClick","to","Header","history","useState","setOpen","href","Container","children","Footer","config1","config2","config3","config4","today","Date","formData","FormData","append","request","url","a","axios","get","result","alert","msg","data","request2","form","post","then","response","JSON","stringify","list","api","fetchData","targetDate","year","getFullYear","month","getMonth","date","getDate","setDate","fetchPoster","name","fetchRankCity","fetchMovie","SliderListItem","movie","showPopup","idx","imgSrc","cate","getUrl","src","alt","MovieView","closePopup","info","link","controls","width","target","SliderList","array","map","item","index","push","id","real_title","main_img","cate_h","url_1min","filter","n","splice","sliderItem","settings","infinite","speed","slidesToShow","slidesToScroll","responsive","breakpoint","setInfo","useCallback","key","getRankCity","Slider","useAsync","promiseFn","rankcity","error","isLoading","RankListItem","b","rankOldAndNew","rankInten","audiCnt","rankIn","Math","abs","searchMovie","RankList","rank","movieNm","movies","getRank","boxOfficeResult","dailyBoxOfficeList","LiveRank","Main","SearchInput","onInsert","query","value","setValue","searchInput","useRef","onChange","e","onSubmit","preventDefault","useEffect","title","current","focus","placeholder","ref","SearchResultItem","posters","nation","runtime","repRlsDate","titleEng","prodYear","rating","company","directors","actors","poster","split","director","directorNm","actor","replaceAll","real_repRlsDate","replace","actorNm","getMovies","SearchResult","watch","Data","TotalCount","Result","Search","location","setMovie","qs","parse","search","ignoreQueryPrefix","App","path","exact","component","Boolean","window","hostname","match","ReactDOM","render","basename","process","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.7678ed66.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport '../css/Aside.scss';\r\n\r\nfunction Aside({ open, closeMenu }) {\r\n  return (\r\n    <aside className={open ? 'Aside open' : 'Aside'}>\r\n      <div className=\"Inner\">\r\n        <button type=\"button\" className=\"close\" onClick={closeMenu}>닫기</button>\r\n        <nav className=\"Nav\">\r\n          <ul>\r\n            <li><Link to=\"/\">홈</Link></li>\r\n            <li><Link to=\"/search\">검색</Link></li>\r\n          </ul>\r\n        </nav>\r\n      </div>\r\n    </aside>\r\n  );\r\n}\r\n\r\nexport default Aside;","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport '../css/Header.scss';\r\nimport Aside from './Aside';\r\n\r\nfunction Header({ history }) {\r\n  const [open, setOpen] = useState(false);\r\n  const onToggle = () => setOpen(!open);\r\n  const closeMenu = () => setOpen(!open);\r\n  return (\r\n    <header className=\"Header\">\r\n      <button type=\"button\" className=\"MenuBtn\" onClick={onToggle}><span></span></button>\r\n      <h1 className=\"Logo\"><a href=\"/\">로고</a></h1>\r\n      <Link to=\"/search\" className=\"SearchBtn\"></Link>\r\n      <Aside history={history} open={open} closeMenu={closeMenu} />\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport '../css/Container.scss';\r\n\r\nfunction Container({ children }) {\r\n  return (\r\n    <section className=\"Content\">\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Container;","import React from 'react';\r\nimport '../css/Footer.scss';\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer className=\"Footer\">\r\n      <div className=\"Address\">\r\n        <span>서울시 노원구 동일로 COPYRIGHTⓒ (우 01753)</span>\r\n        <span>대표전화&nbsp;&nbsp;1234-5678&nbsp;&nbsp;이메일&nbsp;&nbsp;lsy_65@naver.com</span>\r\n        <span>대표자&nbsp;이세영</span>\r\n      </div>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;","import axios from 'axios';\r\n\r\nconst config1 = {\r\n  API_ENDPOINT: 'https://www.kobis.or.kr/kobisopenapi/webservice/rest/boxoffice/searchDailyBoxOfficeList.json',\r\n  KEY: '664383b11fdaa853a4884a63b0ae7cc4'\r\n}\r\nconst config2 = {\r\n  API_ENDPOINT: 'http://api.koreafilm.or.kr/openapi-data2/wisenut/search_api/search_json2.jsp?collection=kmdb_new2',\r\n  KEY: '229UV0UP2N545R3W7SN2'\r\n}\r\nconst config3 = {\r\n  API_ENDPOINT: 'https://www.filecity.co.kr/module/top100_test.php'\r\n}\r\n\r\nconst config4 = {\r\n  API_ENDPOINT: 'https://openapi.naver.com/v1/search/movie.json'\r\n}\r\n\r\nlet today = new Date();\r\n\r\nconst setDate = (targetDate) => {\r\n  let targetDt;\r\n  let year = targetDate.getFullYear();\r\n  let month = targetDate.getMonth() + 1;\r\n  let date = targetDate.getDate() - 1;\r\n  if (month < 10) month = '0' + month;\r\n  if (date < 10) date = '0' + date;\r\n  targetDt = year + '' + month + '' + date;\r\n  return targetDt;\r\n}\r\n\r\nlet formData = new FormData();\r\nformData.append('tab', 'top100');\r\nformData.append('tab2', 'BD_ALL');\r\nformData.append('s_value', '');\r\nformData.append('no_adult', 0);\r\nformData.append('view', 'post');\r\nformData.append('limit', 20);\r\nformData.append('no_overlap', 0);\r\nformData.append('down_chk', 0);\r\nformData.append('sale', 0);\r\nformData.append('sale2', 0);\r\nformData.append('year', 0);\r\nformData.append('poster_chk', 0);\r\n\r\nconst request = async (url) => {\r\n  try {\r\n    const result = await axios.get(url);\r\n    return result;\r\n  } catch (error) {\r\n    alert(error.msg);\r\n    return { data: null };\r\n  }\r\n}\r\n\r\nconst request2 = async (url, form) => {\r\n  try {\r\n    const result = await axios\r\n      .post(url, form)\r\n      .then(response => {\r\n        JSON.stringify(response, null, 2);\r\n        return response.data.list;\r\n      })\r\n    return result;\r\n  } catch (error) {\r\n    alert(error.msg);\r\n    return { data: null };\r\n  }\r\n}\r\n\r\nconst api = {\r\n  //실시간 랭킹 (일별 박스오피스)\r\n  fetchData: () => {\r\n    return request(`${config1.API_ENDPOINT}?key=${config1.KEY}&targetDt=${setDate(today)}`);\r\n  },\r\n  //통합검색\r\n  fetchPoster: (name) => {\r\n    return request(`${config2.API_ENDPOINT}&detail=Y&title=${name}&type=극영화&ServiceKey=${config2.KEY}`)\r\n  },\r\n  //실시간 랭킹 (파일시티)\r\n  fetchRankCity: () => {\r\n    return request2(`${config3.API_ENDPOINT}`, formData);\r\n  },\r\n  //통합검색(네이버)\r\n  fetchMovie: (name) => {\r\n    return request(`${config4.API_ENDPOINT}?query=${name}&display=10`)\r\n  }\r\n}\r\n\r\nexport default api;","import React from 'react';\r\n\r\nfunction SliderListItem({ movie, showPopup }) {\r\n  const { idx, name, imgSrc, cate, url } = movie;\r\n\r\n  const getUrl = (idx, url) => {\r\n    showPopup(idx, url);\r\n  }\r\n\r\n  return (\r\n    <div onClick={() => getUrl(idx, url)}>\r\n      <img src={imgSrc} alt={name} />\r\n      <dl className=\"SliderItem\">\r\n        <dt>{name}</dt>\r\n        <dd>{cate}</dd>\r\n      </dl>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SliderListItem;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport '../css/MovieView.scss';\r\n\r\nfunction MovieView({ closePopup, info }) {\r\n  const link = `https://www.filecity.co.kr/#idx=${info.idx}`\r\n  return (\r\n    <div className=\"MovieView\">\r\n      <p className=\"view_title\">1분 미리보기</p>\r\n      <button type=\"button\" onClick={closePopup} className=\"close\">닫기</button>\r\n      <div className=\"Inner\">\r\n        <video controls width=\"100%\">\r\n          <source src={info.url} type=\"video/mp4\" />\r\n        </video>\r\n        <Link to={link} className=\"goLink\" target=\"_blank\">파일시티 이동</Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MovieView;","import React, { useState, useCallback } from 'react';\r\nimport SliderListItem from './SliderListItem';\r\nimport Slider from 'react-slick';\r\nimport MovieView from './MovieView';\r\n\r\nfunction SliderList({ data }) {\r\n  const sliderList = () => {\r\n    const array = [];\r\n    data.map((item, index) => {\r\n      array.push({\r\n        id: index + 1,\r\n        idx: item.idx,\r\n        name: item.real_title,\r\n        imgSrc: item.main_img,\r\n        cate: item.cate_h,\r\n        url: item.url_1min\r\n      });\r\n      return array;\r\n    });\r\n    let list = array.filter(n => {\r\n      return n.name;\r\n    })\r\n    list = list.splice(0, 10);\r\n    return list;\r\n  }\r\n  const [sliderItem] = useState(sliderList);\r\n\r\n  const settings = {\r\n    infinite: true,\r\n    speed: 500,\r\n    slidesToShow: 4,\r\n    slidesToScroll: 1,\r\n    responsive: [\r\n      {\r\n        breakpoint: 1175,\r\n        settings: {\r\n          slidesToShow: 3\r\n        }\r\n      },\r\n      {\r\n        breakpoint: 540,\r\n        settings: {\r\n          slidesToShow: 2\r\n        }\r\n      },\r\n    ]\r\n  }\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const [info, setInfo] = useState({\r\n    idx: '',\r\n    url: ''\r\n  });\r\n\r\n  const showPopup = useCallback((idx, url) => {\r\n    setOpen(!open);\r\n    setInfo({\r\n      idx: idx,\r\n      url: url\r\n    });\r\n  }, [open]);\r\n\r\n  const closePopup = useCallback(() => {\r\n    setOpen(!open);\r\n  }, [open])\r\n\r\n\r\n  return (\r\n    <div className=\"SliderList\">\r\n      <Slider {...settings}>\r\n        {sliderItem.map(movie => (\r\n          <SliderListItem\r\n            key={movie.id}\r\n            movie={movie}\r\n            showPopup={showPopup}\r\n          />\r\n        ))}\r\n      </Slider>\r\n      {\r\n        open && (\r\n          <MovieView info={info} closePopup={closePopup} />\r\n        )\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SliderList;","import React from 'react';\r\nimport { useAsync } from 'react-async';\r\nimport api from '../api';\r\nimport SliderList from './SliderList';\r\nimport '../css/Slider.scss';\r\n\r\nasync function getRankCity() {\r\n  const response = await api.fetchRankCity();\r\n  return response;\r\n}\r\n\r\nfunction Slider() {\r\n  const { data: rankcity, error, isLoading } = useAsync({\r\n    promiseFn: getRankCity,\r\n  });\r\n\r\n  if (isLoading) return <div></div>;\r\n  if (error) return <div>에러가 발생했습니다</div>;\r\n\r\n  return (\r\n    <article className=\"Slider\">\r\n      <div className=\"SliderWrap\">\r\n        <SliderList data={rankcity} />\r\n      </div>\r\n    </article >\r\n  );\r\n}\r\n\r\nexport default Slider;","import React from 'react';\r\n\r\nfunction RankListItem({ movie, history }) {\r\n  const { id, name, rankOldAndNew, rankInten, audiCnt } = movie;\r\n  const rankIn = Math.abs(rankInten);\r\n  const searchMovie = (name) => {\r\n    history.push(`/search?title=${name}`);\r\n  }\r\n  const test = (a, b) => {\r\n    let type;\r\n    if (a === 'NEW') {\r\n      type = 'New';\r\n    } else if (b < 0) {\r\n      type = 'Down';\r\n    } else if (b > 0) {\r\n      type = 'Up';\r\n    } else {\r\n      type = 'Minus'\r\n    }\r\n    return type;\r\n  }\r\n\r\n  return (\r\n    <li onClick={() => searchMovie(movie.name)}>\r\n      <span className=\"Title\">\r\n        {id + '.'}\r\n        <span className=\"Name\">{name}</span>\r\n        <span className={test(rankOldAndNew, rankInten)}>{(!(rankIn === 0)) ? rankIn : ''}</span>\r\n      </span>\r\n      <span className=\"Count\">{audiCnt}명</span>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default RankListItem;","import React, { useState } from 'react';\r\nimport RankListItem from './RankListItem';\r\n\r\nfunction RankList({ rank, history }) {\r\n  const rankList = () => {\r\n    const array = [];\r\n    rank.map((item, index) => {\r\n      array.push({\r\n        id: index + 1,\r\n        name: item.movieNm,\r\n        rankOldAndNew: item.rankOldAndNew,\r\n        rankInten: item.rankInten,\r\n        audiCnt: item.audiCnt\r\n      });\r\n      return array;\r\n    });\r\n    return array;\r\n  }\r\n\r\n  const [movies] = useState(rankList);\r\n\r\n  return (\r\n    <ol className=\"List\">\r\n      {movies.map((movie, index) => (\r\n        <RankListItem key={index} movie={movie} history={history} />\r\n      ))}\r\n    </ol>\r\n  );\r\n}\r\n\r\nexport default RankList;","import React from 'react';\r\nimport { useAsync } from 'react-async';\r\nimport api from '../api';\r\nimport RankList from './RankList';\r\nimport '../css/LiveRank.scss';\r\n\r\nasync function getRank() {\r\n  const response = await api.fetchData();\r\n  const result = response.data.boxOfficeResult.dailyBoxOfficeList;\r\n  return result;\r\n}\r\n\r\nfunction LiveRank({ history }) {\r\n  const { data: rank, error, isLoading } = useAsync({\r\n    promiseFn: getRank,\r\n  });\r\n\r\n  if (error) return <div>에러가 발생했습니다.</div>;\r\n\r\n  return (\r\n    <article className=\"LiveRank\">\r\n      <div className=\"inner\">\r\n        <h2 className=\"SubTitle\">실시간랭킹 <span>(일별 박스오피스)</span></h2>\r\n        <div className=\"LiveRankWrap\">\r\n          {\r\n            (isLoading) ?\r\n              <div className=\"Loading\">\r\n                <span className=\"l1\"></span>\r\n                <span className=\"l2\"></span>\r\n                <span className=\"l3\"></span>\r\n              </div> :\r\n              <RankList rank={rank} history={history} />\r\n          }\r\n        </div>\r\n      </div>\r\n    </article >\r\n  );\r\n}\r\n\r\nexport default LiveRank;","import React from 'react';\r\nimport Header from './Header';\r\nimport Container from './Container';\r\nimport Footer from './Footer';\r\nimport Slider from './Slider';\r\nimport LiveRank from './LiveRank';\r\n\r\nfunction Main({ history }) {\r\n  return (\r\n    <>\r\n      <Header history={history} />\r\n      <Container>\r\n        <Slider />\r\n        <LiveRank history={history} />\r\n      </Container>\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Main;","import React, { useState, useEffect, useCallback, useRef } from 'react';\r\n\r\nfunction SearchInput({ onInsert, history, query }) {\r\n  const [value, setValue] = useState('');\r\n  const searchInput = useRef();\r\n\r\n  const onChange = useCallback(\r\n    e => {\r\n      setValue(e.target.value);\r\n    }, []\r\n  );\r\n  const onSubmit = useCallback(\r\n    e => {\r\n      e.preventDefault();\r\n      if (value) {\r\n        onInsert(value);\r\n      }\r\n    }, [onInsert, value]\r\n  );\r\n  const goHome = () => {\r\n    history.push('/')\r\n  }\r\n  useEffect(() => {\r\n    if (query.title) setValue(query.title);\r\n    searchInput.current.focus();\r\n  }, [query]);\r\n  return (\r\n    <div className=\"SearchWrap\">\r\n      <button type=\"button\" className=\"BackBtn\" onClick={goHome}><span></span><span></span></button>\r\n      <form onSubmit={onSubmit}>\r\n        <input type=\"text\" placeholder=\"검색어를 입력하세요.\" onChange={onChange} value={value} ref={searchInput} />\r\n        <button type=\"submit\">검색</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchInput;","import React from 'react';\r\n\r\nfunction SearchResultItem({ movie }) {\r\n  const { title, posters, type, nation, runtime, repRlsDate, titleEng, prodYear, rating, company, directors, actors } = movie;\r\n  const poster = posters.split('|')[0];\r\n  const director = directors.director[0].directorNm;\r\n  const actor = actors.actor.splice(0, 5);\r\n  const noImage = '/movie/img/noimage.gif';\r\n  let real_title = title.replaceAll(' !HS ', '');\r\n  real_title = real_title.replaceAll(' !HE ', '');\r\n  let real_repRlsDate = repRlsDate.replace(/(\\d{4})(\\d{2})(\\d{2})/, '$1-$2-$3');\r\n  return (\r\n    <div className=\"Movie\">\r\n      <div className=\"Inner\">\r\n        <div className=\"Movie_Title\">\r\n          {real_title}\r\n          <span>{titleEng + ' · ' + prodYear + '년'}</span>\r\n        </div>\r\n        <div className=\"Movie_Info\">\r\n          <ul className=\"Movie_Info_List\">\r\n            <li>{type} · <span>{rating}</span> · {nation + ' · ' + runtime + '분'}</li>\r\n            <li>\r\n              <dl>\r\n                <dt>개봉일</dt>\r\n                <dd>{real_repRlsDate}</dd>\r\n              </dl>\r\n            </li>\r\n            <li>\r\n              <dl>\r\n                <dt>제작사</dt>\r\n                <dd>{company}</dd>\r\n              </dl>\r\n            </li>\r\n            <li>\r\n              <dl>\r\n                <dt>감독</dt>\r\n                <dd>{director}</dd>\r\n              </dl>\r\n            </li>\r\n            <li>\r\n              <dl>\r\n                <dt>출연</dt>\r\n                <dd>{actor.map((actor, index) => <span key={index}>{actor.actorNm}</span>)}</dd>\r\n              </dl>\r\n            </li>\r\n          </ul>\r\n          <figure className=\"Movie_Poster\">\r\n            <img src={poster ? poster : noImage} alt={real_title} />\r\n          </figure>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchResultItem;","import React from 'react';\r\nimport { useAsync } from 'react-async';\r\nimport SearchResultItem from './SearchResultItem';\r\nimport api from '../api';\r\n\r\nasync function getMovies({ movie }) {\r\n  const response = await api.fetchPoster(movie);\r\n  let result = response.data;\r\n  return result;\r\n}\r\n\r\nfunction SearchResult({ movie }) {\r\n  const { data: movies, error, isLoading } = useAsync({\r\n    promiseFn: getMovies,\r\n    movie,\r\n    watch: movie\r\n  });\r\n\r\n  if (isLoading) return <div className=\"Loading\"><span className=\"l1\"></span><span className=\"l2\"></span><span className=\"l3\"></span></div>;\r\n  if (error) return <div>에러가 발생했습니다</div>;\r\n\r\n  return (\r\n    <>\r\n      {\r\n        (movies.Data[0].TotalCount === 0) ? <div className=\"Empty\">검색결과 없음</div> :\r\n          movies.Data[0].Result.map((movie, index) => (\r\n            <SearchResultItem key={index} movie={movie} />\r\n          ))\r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SearchResult;","import React, { useState, useCallback } from 'react';\r\nimport qs from 'qs';\r\nimport SearchInput from './SearchInput';\r\nimport SearchResult from './SearchResult';\r\nimport '../css/Search.scss'\r\nimport { useEffect } from 'react';\r\n\r\nfunction Search({ location, history }) {\r\n  const [movie, setMovie] = useState(null);\r\n  const onInsert = useCallback((title) => {\r\n    setMovie(title);\r\n  }, []);\r\n\r\n  const query = qs.parse(location.search, {\r\n    ignoreQueryPrefix: true\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (query) setMovie(query.title);\r\n    if (movie) onInsert(movie);\r\n  }, [query, movie, onInsert]);\r\n\r\n  return (\r\n    <section className=\"SearchArea\">\r\n      <SearchInput onInsert={onInsert} history={history} query={query} />\r\n      {(movie) ?\r\n        <SearchResult movie={movie} /> : ''\r\n      }\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Search;","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport Main from './Components/Main';\r\nimport Search from './Components/Search';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Switch>\r\n        <Route path=\"/\" exact={true} component={Main} />\r\n        <Route path=\"/search\" component={Search} />\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport './index.css';\r\nimport '../node_modules/slick-carousel/slick/slick.css';\r\nimport '../node_modules/slick-carousel/slick/slick-theme.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}