{"version":3,"sources":["Components/Aside.js","Components/Header.js","Components/Container.js","Components/Footer.js","api.js","Components/SliderListItem.js","Components/MovieView.js","Components/SliderList.js","Components/Slider.js","Components/RankListItem.js","Components/RankList.js","Components/LiveRank.js","Components/Main.js","Components/SearchInput.js","Components/SearchResultItem.js","Components/SearchResult.js","Components/Search.js","App.js","serviceWorker.js","index.js"],"names":["Aside","open","closeMenu","className","type","onClick","to","Header","history","useState","setOpen","href","Container","children","Footer","config1","config2","config3","config4","today","Date","formData","FormData","append","request","url","a","axios","get","result","alert","msg","data","request2","form","post","then","response","JSON","stringify","list","api","fetchData","targetDate","year","getFullYear","month","getMonth","date","getDate","setDate","fetchPoster","name","fetchRankCity","fetchPoster2","SliderListItem","movie","showPopup","idx","imgSrc","cate","getUrl","src","alt","MovieView","closePopup","info","link","controls","width","target","SliderList","array","map","item","index","push","id","real_title","main_img","cate_h","url_1min","filter","n","splice","sliderItem","settings","infinite","speed","slidesToShow","slidesToScroll","responsive","breakpoint","setInfo","useCallback","key","getRankCity","Slider","useAsync","promiseFn","rankcity","error","isLoading","RankListItem","b","rankOldAndNew","rankInten","audiCnt","rankIn","Math","abs","searchMovie","RankList","rank","movieNm","movies","getRank","boxOfficeResult","dailyBoxOfficeList","LiveRank","Main","SearchInput","onInsert","query","value","setValue","searchInput","useRef","onChange","e","onSubmit","preventDefault","useEffect","title","current","focus","placeholder","ref","SearchResultItem","posters","nation","runtime","repRlsDate","titleEng","rating","company","director","actor","poster","split","directorNm","actors","ratingGrade","replaceAll","real_repRlsDate","replace","actorNm","getMovies","SearchResult","watch","Data","TotalCount","Result","Search","location","setMovie","qs","parse","search","ignoreQueryPrefix","App","path","exact","component","Boolean","window","hostname","match","ReactDOM","render","basename","process","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.cab10275.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport '../css/Aside.scss';\n\nfunction Aside({ open, closeMenu }) {\n  return (\n    <aside className={open ? 'Aside open' : 'Aside'}>\n      <div className=\"Inner\">\n        <button type=\"button\" className=\"close\" onClick={closeMenu}>닫기</button>\n        <nav className=\"Nav\">\n          <ul>\n            <li><Link to=\"/\">홈</Link></li>\n            <li><Link to=\"/search\">검색</Link></li>\n          </ul>\n        </nav>\n      </div>\n    </aside>\n  );\n}\n\nexport default Aside;","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport '../css/Header.scss';\nimport Aside from './Aside';\n\nfunction Header({ history }) {\n  const [open, setOpen] = useState(false);\n  const onToggle = () => setOpen(!open);\n  const closeMenu = () => setOpen(!open);\n  return (\n    <header className=\"Header\">\n      <button type=\"button\" className=\"MenuBtn\" onClick={onToggle}><span></span></button>\n      <h1 className=\"Logo\"><a href=\"/\">로고</a></h1>\n      <Link to=\"/search\" className=\"SearchBtn\"></Link>\n      <Aside history={history} open={open} closeMenu={closeMenu} />\n    </header>\n  );\n}\n\nexport default Header;","import React from 'react';\nimport '../css/Container.scss';\n\nfunction Container({ children }) {\n  return (\n    <section className=\"Content\">\n      {children}\n    </section>\n  );\n}\n\nexport default Container;","import React from 'react';\nimport '../css/Footer.scss';\n\nfunction Footer() {\n  return (\n    <footer className=\"Footer\">\n      <div className=\"Address\">\n        <span>서울시 노원구 동일로 COPYRIGHTⓒ (우 01753)</span>\n        <span>대표전화&nbsp;&nbsp;1234-5678&nbsp;&nbsp;이메일&nbsp;&nbsp;lsy_65@naver.com</span>\n        <span>대표자&nbsp;이세영</span>\n      </div>\n    </footer>\n  );\n}\n\nexport default Footer;","import axios from 'axios';\n\nconst config1 = {\n  API_ENDPOINT: 'https://www.kobis.or.kr/kobisopenapi/webservice/rest/boxoffice/searchDailyBoxOfficeList.json',\n  KEY: '664383b11fdaa853a4884a63b0ae7cc4'\n}\nconst config2 = {\n  API_ENDPOINT: 'http://api.koreafilm.or.kr:80/openapi-data2/wisenut/search_api/search_json2.jsp?collection=kmdb_new2',\n  KEY: '229UV0UP2N545R3W7SN2'\n}\nconst config3 = {\n  API_ENDPOINT: 'https://www.filecity.co.kr/module/top100_test.php'\n}\n\nconst config4 = {\n  API_ENDPOINT: 'https://www.filecity.co.kr/hoonmin/koreafilm_api.php',\n}\n\nlet today = new Date();\n\nconst setDate = (targetDate) => {\n  let targetDt;\n  let year = targetDate.getFullYear();\n  let month = targetDate.getMonth() + 1;\n  let date = targetDate.getDate() - 1;\n  if (month < 10) month = '0' + month;\n  if (date < 10) date = '0' + date;\n  targetDt = year + '' + month + '' + date;\n  return targetDt;\n}\n\nlet formData = new FormData();\nformData.append('tab', 'top100');\nformData.append('tab2', 'BD_ALL');\nformData.append('s_value', '');\nformData.append('no_adult', 0);\nformData.append('view', 'post');\nformData.append('limit', 20);\nformData.append('no_overlap', 0);\nformData.append('down_chk', 0);\nformData.append('sale', 0);\nformData.append('sale2', 0);\nformData.append('year', 0);\nformData.append('poster_chk', 0);\n\nconst request = async (url) => {\n  try {\n    const result = await axios.get(url);\n    return result;\n  } catch (error) {\n    alert(error.msg);\n    return { data: null };\n  }\n}\n\nconst request2 = async (url, form) => {\n  try {\n    const result = await axios\n      .post(url, form)\n      .then(response => {\n        JSON.stringify(response, null, 2);\n        return response.data.list;\n      })\n    return result;\n  } catch (error) {\n    alert(error.msg);\n    return { data: null };\n  }\n}\n\nconst api = {\n  //실시간 랭킹 (일별 박스오피스)\n  fetchData: () => {\n    return request(`${config1.API_ENDPOINT}?key=${config1.KEY}&targetDt=${setDate(today)}`);\n  },\n  //통합검색\n  fetchPoster: (name) => {\n    return request(`${config2.API_ENDPOINT}&detail=Y&title=${name}&type=극영화&ServiceKey=${config2.KEY}`)\n  },\n  //실시간 랭킹 (파일시티)\n  fetchRankCity: () => {\n    return request2(`${config3.API_ENDPOINT}`, formData);\n  },\n  //통합검색2\n  fetchPoster2: (name) => {\n    return request(`${config4.API_ENDPOINT}?title=${name}`)\n  },\n}\n\nexport default api;","import React from 'react';\n\nfunction SliderListItem({ movie, showPopup }) {\n  const { idx, name, imgSrc, cate, url } = movie;\n\n  const getUrl = (idx, url) => {\n    showPopup(idx, url);\n  }\n\n  return (\n    <div onClick={() => getUrl(idx, url)}>\n      <img src={imgSrc} alt={name} />\n      <dl className=\"SliderItem\">\n        <dt>{name}</dt>\n        <dd>{cate}</dd>\n      </dl>\n    </div>\n  );\n}\n\nexport default SliderListItem;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport '../css/MovieView.scss';\n\nfunction MovieView({ closePopup, info }) {\n  const link = `https://www.filecity.co.kr/#idx=${info.idx}`\n  return (\n    <div className=\"MovieView\">\n      <p className=\"view_title\">1분 미리보기</p>\n      <button type=\"button\" onClick={closePopup} className=\"close\">닫기</button>\n      <div className=\"Inner\">\n        <video controls width=\"100%\">\n          <source src={info.url} type=\"video/mp4\" />\n        </video>\n        <Link to={link} className=\"goLink\" target=\"_blank\">파일시티 이동</Link>\n      </div>\n    </div>\n  );\n}\n\nexport default MovieView;","import React, { useState, useCallback } from 'react';\nimport SliderListItem from './SliderListItem';\nimport Slider from 'react-slick';\nimport MovieView from './MovieView';\n\nfunction SliderList({ data }) {\n  const sliderList = () => {\n    const array = [];\n    data.map((item, index) => {\n      array.push({\n        id: index + 1,\n        idx: item.idx,\n        name: item.real_title,\n        imgSrc: item.main_img,\n        cate: item.cate_h,\n        url: item.url_1min\n      });\n      return array;\n    });\n    let list = array.filter(n => {\n      return n.name;\n    })\n    list = list.splice(0, 10);\n    return list;\n  }\n  const [sliderItem] = useState(sliderList);\n\n  const settings = {\n    infinite: true,\n    speed: 500,\n    slidesToShow: 4,\n    slidesToScroll: 1,\n    responsive: [\n      {\n        breakpoint: 1175,\n        settings: {\n          slidesToShow: 3\n        }\n      },\n      {\n        breakpoint: 540,\n        settings: {\n          slidesToShow: 2\n        }\n      },\n    ]\n  }\n\n  const [open, setOpen] = useState(false);\n  const [info, setInfo] = useState({\n    idx: '',\n    url: ''\n  });\n\n  const showPopup = useCallback((idx, url) => {\n    setOpen(!open);\n    setInfo({\n      idx: idx,\n      url: url\n    });\n  }, [open]);\n\n  const closePopup = useCallback(() => {\n    setOpen(!open);\n  }, [open])\n\n\n  return (\n    <div className=\"SliderList\">\n      <Slider {...settings}>\n        {sliderItem.map(movie => (\n          <SliderListItem\n            key={movie.id}\n            movie={movie}\n            showPopup={showPopup}\n          />\n        ))}\n      </Slider>\n      {\n        open && (\n          <MovieView info={info} closePopup={closePopup} />\n        )\n      }\n    </div>\n  );\n}\n\nexport default SliderList;","import React from 'react';\nimport { useAsync } from 'react-async';\nimport api from '../api';\nimport SliderList from './SliderList';\nimport '../css/Slider.scss';\n\nasync function getRankCity() {\n  const response = await api.fetchRankCity();\n  return response;\n}\n\nfunction Slider() {\n  const { data: rankcity, error, isLoading } = useAsync({\n    promiseFn: getRankCity,\n  });\n\n  if (isLoading) return <div></div>;\n  if (error) return <div>에러가 발생했습니다</div>;\n\n  return (\n    <article className=\"Slider\">\n      <div className=\"SliderWrap\">\n        <SliderList data={rankcity} />\n      </div>\n    </article >\n  );\n}\n\nexport default Slider;","import React from 'react';\n\nfunction RankListItem({ movie, history }) {\n  const { id, name, rankOldAndNew, rankInten, audiCnt } = movie;\n  const rankIn = Math.abs(rankInten);\n  const searchMovie = (name) => {\n    history.push(`/search?title=${name}`);\n  }\n  const test = (a, b) => {\n    let type;\n    if (a === 'NEW') {\n      type = 'New';\n    } else if (b < 0) {\n      type = 'Down';\n    } else if (b > 0) {\n      type = 'Up';\n    } else {\n      type = 'Minus'\n    }\n    return type;\n  }\n\n  return (\n    <li onClick={() => searchMovie(movie.name)}>\n      <span className=\"Title\">\n        {id + '.'}\n        <span className=\"Name\">{name}</span>\n        <span className={test(rankOldAndNew, rankInten)}>{(!(rankIn === 0)) ? rankIn : ''}</span>\n      </span>\n      <span className=\"Count\">{audiCnt}명</span>\n    </li>\n  );\n}\n\nexport default RankListItem;","import React, { useState } from 'react';\nimport RankListItem from './RankListItem';\n\nfunction RankList({ rank, history }) {\n  const rankList = () => {\n    const array = [];\n    rank.map((item, index) => {\n      array.push({\n        id: index + 1,\n        name: item.movieNm,\n        rankOldAndNew: item.rankOldAndNew,\n        rankInten: item.rankInten,\n        audiCnt: item.audiCnt\n      });\n      return array;\n    });\n    return array;\n  }\n\n  const [movies] = useState(rankList);\n\n  return (\n    <ol className=\"List\">\n      {movies.map((movie, index) => (\n        <RankListItem key={index} movie={movie} history={history} />\n      ))}\n    </ol>\n  );\n}\n\nexport default RankList;","import React from 'react';\nimport { useAsync } from 'react-async';\nimport api from '../api';\nimport RankList from './RankList';\nimport '../css/LiveRank.scss';\n\nasync function getRank() {\n  const response = await api.fetchData();\n  const result = response.data.boxOfficeResult.dailyBoxOfficeList;\n  return result;\n}\n\nfunction LiveRank({ history }) {\n  const { data: rank, error, isLoading } = useAsync({\n    promiseFn: getRank,\n  });\n\n  if (error) return <div>에러가 발생했습니다.</div>;\n\n  return (\n    <article className=\"LiveRank\">\n      <div className=\"inner\">\n        <h2 className=\"SubTitle\">실시간랭킹 <span>(일별 박스오피스)</span></h2>\n        <div className=\"LiveRankWrap\">\n          {\n            (isLoading) ?\n              <div className=\"Loading\">\n                <span className=\"l1\"></span>\n                <span className=\"l2\"></span>\n                <span className=\"l3\"></span>\n              </div> :\n              <RankList rank={rank} history={history} />\n          }\n        </div>\n      </div>\n    </article >\n  );\n}\n\nexport default LiveRank;","import React from 'react';\nimport Header from './Header';\nimport Container from './Container';\nimport Footer from './Footer';\nimport Slider from './Slider';\nimport LiveRank from './LiveRank';\n\nfunction Main({ history }) {\n  return (\n    <>\n      <Header history={history} />\n      <Container>\n        <Slider />\n        <LiveRank history={history} />\n      </Container>\n      <Footer />\n    </>\n  );\n}\n\nexport default Main;","import React, { useState, useEffect, useCallback, useRef } from 'react';\n\nfunction SearchInput({ onInsert, history, query }) {\n  const [value, setValue] = useState('');\n  const searchInput = useRef();\n\n  const onChange = useCallback(\n    e => {\n      setValue(e.target.value);\n    }, []\n  );\n  const onSubmit = useCallback(\n    e => {\n      e.preventDefault();\n      if (value) {\n        onInsert(value);\n      }\n    }, [onInsert, value]\n  );\n  const goHome = () => {\n    history.push('/')\n  }\n  useEffect(() => {\n    if (query.title) setValue(query.title);\n    searchInput.current.focus();\n  }, [query]);\n  return (\n    <div className=\"SearchWrap\">\n      <button type=\"button\" className=\"BackBtn\" onClick={goHome}><span></span><span></span></button>\n      <form onSubmit={onSubmit}>\n        <input type=\"text\" placeholder=\"검색어를 입력하세요.\" onChange={onChange} value={value} ref={searchInput} />\n        <button type=\"submit\">검색</button>\n      </form>\n    </div>\n  );\n}\n\nexport default SearchInput;","import React from 'react';\n\nfunction SearchResultItem({ movie }) {\n  const { title, posters, type, nation, runtime, repRlsDate, titleEng, rating, company, director, actor } = movie;\n  const poster = posters.split('|')[0];\n  //const still = stlls.split('|');\n  const directorNm = director[0].directorNm;\n  const actors = actor.splice(0, 5);\n  //actors = actor.splice(0, 5);\n  const noImage = '/search_movie/img/noimage.gif';\n  const ratingGrade = rating[0].ratingGrade;\n  let real_title = title.replaceAll(' !HS ', '');\n  real_title = real_title.replaceAll(' !HE ', '');\n  let real_repRlsDate = repRlsDate.replace(/(\\d{4})(\\d{2})(\\d{2})/, '$1-$2-$3');\n\n  return (\n    <div className=\"Movie\">\n      <div className=\"Inner\">\n        <div className=\"Movie_Title\">\n          {real_title}\n          <span>{titleEng}</span>\n        </div>\n        <div className=\"Movie_Info\">\n          <ul className=\"Movie_Info_List\">\n            <li>{type} · <span>{ratingGrade}</span> · {nation + ' · ' + runtime + '분'}</li>\n            <li>\n              <dl>\n                <dt>개봉일</dt>\n                <dd>{real_repRlsDate}</dd>\n              </dl>\n            </li>\n            <li>\n              <dl>\n                <dt>제작사</dt>\n                <dd>{company}</dd>\n              </dl>\n            </li>\n            <li>\n              <dl>\n                <dt>감독</dt>\n                <dd>{directorNm}</dd>\n              </dl>\n            </li>\n            <li>\n              <dl>\n                <dt>출연</dt>\n                <dd>{actors.map((actor, index) => <span key={index}>{actor.actorNm}</span>)}</dd>\n              </dl>\n            </li>\n          </ul>\n          <figure className=\"Movie_Poster\">\n            <img src={poster ? poster : noImage} alt={real_title} />\n          </figure>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default SearchResultItem;","import React from 'react';\nimport { useAsync } from 'react-async';\nimport SearchResultItem from './SearchResultItem';\nimport api from '../api';\n\n// async function getMovies({ movie }) {\n//   const response = await api.fetchPoster(movie);\n//   let result = response.data;\n//   return result;\n// }\n\nasync function getMovies({ movie }) {\n  const response = await api.fetchPoster2(movie);\n  let result = response.data;\n  return result;\n}\n\n\nfunction SearchResult({ movie }) {\n  const { data: movies, error, isLoading } = useAsync({\n    promiseFn: getMovies,\n    movie,\n    watch: movie\n  });\n\n  if (isLoading) return <div className=\"Loading\"><span className=\"l1\"></span><span className=\"l2\"></span><span className=\"l3\"></span></div>;\n  if (error) return <div>에러가 발생했습니다</div>;\n\n  return (\n    <div className=\"SearchResult\">\n      {\n        (movies.Data[0].TotalCount === 0) ? <div className=\"Empty\">검색결과 없음</div> :\n          movies.Data[0].Result.map((movie, index) => (\n            <SearchResultItem key={index} movie={movie} />\n          ))\n      }\n    </div>\n  );\n}\n\nexport default SearchResult;","import React, { useState, useCallback } from 'react';\nimport qs from 'qs';\nimport SearchInput from './SearchInput';\nimport SearchResult from './SearchResult';\nimport '../css/Search.scss'\nimport { useEffect } from 'react';\n\nfunction Search({ location, history }) {\n  const [movie, setMovie] = useState(null);\n  const onInsert = useCallback((title) => {\n    setMovie(title);\n  }, []);\n\n  const query = qs.parse(location.search, {\n    ignoreQueryPrefix: true\n  });\n\n  useEffect(() => {\n    if (query) setMovie(query.title);\n    if (movie) onInsert(movie);\n  }, [query, movie, onInsert]);\n\n  return (\n    <section className=\"SearchArea\">\n      <SearchInput onInsert={onInsert} history={history} query={query} />\n      {(movie) ?\n        <SearchResult movie={movie} /> : ''\n      }\n    </section>\n  );\n}\n\nexport default Search;","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Main from './Components/Main';\nimport Search from './Components/Search';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route path=\"/\" exact={true} component={Main} />\n        <Route path=\"/search\" component={Search} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport '../node_modules/slick-carousel/slick/slick.css';\nimport '../node_modules/slick-carousel/slick/slick-theme.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}